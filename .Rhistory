file.remove('Read-and-delete-me')
pkgbuild::compile_dll()
roxygen2::roxygenise(load = "source")
pkgbuild::compile_dll() # see note below
roxygen2::roxygenise(load = "source")
pkgbuild::compile_dll() # see note below
roxygen2::roxygenise(load = "source")
class <- c(1,3,4,2,1)
Sobs <- rbind(c(0.001, 0.002, 0.001), c(0.1, 0.1, 0.12, 0.12), c(0.003, 0.0330, 0.003), c(0.1, 0.1, 0.15, 0.15))
View(Sobs)
Sobs <- cbind(c(0.001, 0.002, 0.001), c(0.1, 0.1, 0.12, 0.12), c(0.003, 0.0330, 0.003), c(0.1, 0.1, 0.15, 0.15))
class <- c(1,3,4,1)
View(Sobs)
class[class==1] <- ifelse(mean(Sobs, na.rm=T)< 0.05, 1, 5)
mean(Sobs)
#'Classify river for k600 prior assignment
#'
#'@param Wobs observed widths matrix
classify_func_k600 <- function(Wobs, Sobs) {
Wobs[Wobs <= 0] <- NA
lwbar <- mean(log(Wobs), na.rm=TRUE)
Sobs[Sobs <= 0] <- NA
lsbar <- mean(log(Sobs), na.rm=TRUE)
classes <- c(log(10),
log(50),
log(100))
Sclass <- log(0.05)
index <- ifelse(lwbar < classes[1] & lsbar < 0.05, 1,
ifelse(lwbar < classes[1] & lsbar >= 0.05, 5,
ifelse(lwbar >= classes[1] & lwbar < classes[2], 2,
ifelse(lwbar >= classes[2] & lwbar < classes[3],3,4))))
return(index)
}
Wobs <- cbind(c(100,150,100,110),c(140,145,134,140), c(100,100,100,101), c(110,112,113,120))
View(Wobs)
#' Estimate k600_hat using bigee data
#'
#' @param Wobs Observed W,as a space-down, time-across matrix
#' @export
estimate_logk600 <- function(Wobs, Sobs){
Wobs[Wobs <= 0] <- NA
Sobs[Sobs <=0] <- NA
temp <- log(c(5.666775,
3.024020,
2.034140,
2.238760,
79.464785))
class <- apply(Wobs, 2, classify_func_k600, Sobs=Sobs)
khat <- temp[class]
}
estimate_logk600(Wobs, Sobs)
t <- estimate_logk600(Wobs, Sobs)
#'Classify river for k600 prior assignment
#'
#'@param Wobs observed widths matrix
#'@param Sobs observed slopes matrix
classify_func_k600 <- function(Wobs, Sobs) {
Wobs[Wobs <= 0] <- NA
lwbar <- mean(log(Wobs), na.rm=TRUE)
Sobs[Sobs <= 0] <- NA
lsbar <- mean(log(Sobs), na.rm=TRUE)
classes <- c(log(10),
log(50),
log(100))
Sclass <- log(0.05)
index <- ifelse(lwbar < classes[1] & lsbar < 0.05, 1,
ifelse(lwbar < classes[1] & lsbar >= 0.05, 5,
ifelse(lwbar >= classes[1] & lwbar < classes[2], 2,
ifelse(lwbar >= classes[2] & lwbar < classes[3],3,4))))
print(index)
return(index)
}
t <- estimate_logk600(Wobs, Sobs)
exp(0.806)
mean(Sobs)
Wobs <- cbind(c(9,9,8,9),c(6,6,6,5), c(6,6,9,8), c(4,4,5,6))
t <- estimate_logk600(Wobs, Sobs)
mean(Sobs)
lsbar <- mean(log(Sobs), na.rm=TRUE)
#'Classify river for k600 prior assignment
#'
#'@param Wobs observed widths matrix
#'@param Sobs observed slopes matrix
classify_func_k600 <- function(Wobs, Sobs) {
Wobs[Wobs <= 0] <- NA
lwbar <- mean(log(Wobs), na.rm=TRUE)
Sobs[Sobs <= 0] <- NA
lsbar <- mean(log(Sobs), na.rm=TRUE)
classes <- c(log(10),
log(50),
log(100))
Sclass <- log(0.05)
index <- ifelse(lwbar < classes[1] & lsbar < Sclass, 1,
ifelse(lwbar < classes[1] & lsbar >= Sclass, 5,
ifelse(lwbar >= classes[1] & lwbar < classes[2], 2,
ifelse(lwbar >= classes[2] & lwbar < classes[3],3,4))))
print(index)
return(index)
}
t <- estimate_logk600(Wobs, Sobs)
lsbar <- mean(log(Sobs), na.rm=TRUE)
classes <- c(log(10),
log(50),
log(100))
Sclass <- log(0.05)
#'Classify river for k600 prior assignment
#'
#'@param Wobs observed widths matrix
#'@param Sobs observed slopes matrix
classify_func_k600 <- function(Wobs, Sobs) {
Wobs[Wobs <= 0] <- NA
lwbar <- mean(log(Wobs), na.rm=TRUE)
Sobs[Sobs <= 0] <- NA
lsbar <- mean(Sobs, na.rm=TRUE)
classes <- c(log(10),
log(50),
log(100))
Sclass <- 0.05
index <- ifelse(lwbar < classes[1] & lsbar < Sclass, 1,
ifelse(lwbar < classes[1] & lsbar >= Sclass, 5,
ifelse(lwbar >= classes[1] & lwbar < classes[2], 2,
ifelse(lwbar >= classes[2] & lwbar < classes[3],3,4))))
print(index)
return(index)
}
t <- estimate_logk600(Wobs, Sobs)
exp(4.38)
rstan:::rstudio_stanc("inst/stan/master.stan")
rstan:::rstudio_stanc("inst/stan/master.stan")
0.2724834*(2/3)
0.2724834*(3/2)
0.4366114*(3/2)
0.4366114*(2/3)
0.6624354*(3/2)
0.6624354*(2/3)
1.3160065*(3/2)
1.3160065*(2/3)
0.6488131*(3/2)
0.6488131*(2/3)
pkgbuild::compile_dll() # see note below
roxygen2::roxygenise(load = "source")
pkgbuild::compile_dll() # see note below
roxygen2::roxygenise(load = "source")
pkgbuild::compile_dll() # see note below
roxygen2::roxygenise(load = "source")
pkgbuild::compile_dll() # see note below
roxygen2::roxygenise(load = "source")
pkgbuild::compile_dll() # see note below
roxygen2::roxygenise(load = "source")
matrix(5, nrow-4, ncol=4)
matrix(5, nrow=4, ncol=4)
pkgbuild::compile_dll() # see note below
roxygen2::roxygenise(load = "source")
exp(11.6)
log(2.23)
log(2.03)
